import datetime
from logging import getLogger
from telegram import Bot
from telegram import Update
from telegram import InlineKeyboardButton # –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ—Ç–¥–µ–ª—å–Ω—É—é –∫–ª–∞–≤–∏—à—É
from telegram import InlineKeyboardMarkup # –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≤—Å—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—Ü–µ–ª–æ–º
from telegram import ParseMode
from telegram.ext import Updater
from telegram.ext import CommandHandler
from telegram.ext import MessageHandler
from telegram.ext import Filters

from telegram.ext import ConversationHandler
from telegram.ext import CallbackQueryHandler # –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–ª–∞–≤–∏—à–∏
from telegram.utils.request import Request




from echo.config import TG_TOKEN
from echo.config import TG_API_URL
from echo.config import load_config


config = load_config()

logger = getLogger(__name__)



# `callback_data` -- —ç—Ç–æ —Ç–æ, —á—Ç–æ –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å TG –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–∞–∂–¥—É—é –∫–Ω–æ–ø–∫—É.
# –ü–æ—ç—Ç–æ–º—É –∫–∞–∂–¥—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º
CALLBACK_BUTTON_LEFT = 'callback_button_left'
CALLBACK_BUTTON_RIGHT = 'callback_button_right'
CALLBACK_BUTTON_BACK = 'callback_button_back'

TITLES = {
    CALLBACK_BUTTON_LEFT: '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è',
    CALLBACK_BUTTON_RIGHT: '–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ',
    CALLBACK_BUTTON_BACK: '–ù–∞–∑–∞–¥',
}


def get_base_inline_keyboard_1():
    """ –ü–æ–ª—É—á–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
        –≠—Ç–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±—É–¥–µ—Ç –≤–∏–¥–Ω–∞ –ø–æ–¥ –∫–∞–∂–¥—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –≥–¥–µ –µ–µ –ø—Ä–∏–∫—Ä–µ–ø–∏–ª–∏
    """
    # –ö–∞–∂–¥—ã–π —Å–ø–∏—Å–æ–∫ –≤–Ω—É—Ç—Ä–∏ "Keyboard" -- —ç—Ç–æ –æ–¥–∏–Ω –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Ä—è–¥ –∫–Ω–æ–ø–æ–∫
    keyboard = [
        # –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤–Ω—É—Ç—Ä–∏ —Å–ø–∏—Å–∫–∞ -- —ç—Ç–æ –æ–¥–∏–Ω –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Å—Ç–æ–ª–±–µ—Ü.
        # –°–∫–æ–ª—å–∫–æ –∫–Ω–æ–ø–æ–∫ -- —Å—Ç–æ–ª—å–∫–æ —Å—Ç–æ–ª–±—Ü–æ–≤
        [
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON_LEFT], callback_data=CALLBACK_BUTTON_LEFT),
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON_RIGHT], callback_data=CALLBACK_BUTTON_RIGHT),

        ],
    ]
    return InlineKeyboardMarkup(keyboard)


def keyboard_callback_handler(bot: Bot, update: Update,  chat_data=None, **kwargs):
    """ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –í–°–ï–• –∫–Ω–æ–ø–æ–∫ —Å–æ –í–°–ï–• –∫–ª–∞–≤–∏–∞—Ç—É—Ä
    """
    query = update.callback_query
    data = query.data
    now = datetime.datetime.now()

    # –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è 'effective_message'
    chat_id = update.effective_message.chat_id
    current_text = update.effective_message.text

    if data == CALLBACK_BUTTON_LEFT:
        # "–£–¥–∞–ª–∏–º" –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —É –ø—Ä–æ—à–ª–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        # (–Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –µ–≥–æ —Ç–∞–∫, —á—Ç–æ —Ç–µ–∫—Å—Ç –æ—Å—Ç–∞–Ω–µ—Ç—Å—è —Ç–æ—Ç –∂–µ, –∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–æ–ø–∞–¥–µ—Ç)
        query.edit_message_text(
            text=current_text,
            parse_mode=ParseMode.MARKDOWN,
        )
        # –û—Ç–ø—Ä–∞–≤–∏–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É
        bot.send_message(
            chat_id=chat_id,
            text=f'–û —á–µ–º –í–∞–º –Ω–∞–ø–æ–º–Ω–∏—Ç—å?',
        )


    elif data == CALLBACK_BUTTON_RIGHT:
        pass
    else:
        pass

# def do_reminder(bot: Bot, update: Update):
#     chat_id = update.message.chat_id
#     text = update.message.text
#     # –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
#
#     if user_data:
#         bot.send_message(
#             chat_id=chat_id,
#             text=f'–í–∞—à —Ç–µ–∫—Å—Ç - {user_data}! üññ',
#         )


def do_start(bot: Bot, update: Update):
    chat_id = update.message.chat_id
    user_name = update.message.from_user.first_name
    bot.send_message(
        chat_id=chat_id,
        text=f'–ü—Ä–∏–≤–µ—Ç, {user_name}! üññ',
    )


def do_help(bot: Bot, update: Update):
    chat_id = update.message.chat_id
    bot.send_message(
        chat_id=chat_id,
        text=f'–ù–∞–ø–∏—à–∏ - "–ü—Ä–∏–≤–µ—Ç" üññ',
    )


def do_echo(bot: Bot, update: Update):
    chat_id = update.message.chat_id
    user_name = update.message.from_user.first_name
    user_text = update.message.text
    text = f"–í–∞—à ID = {chat_id}\n\n{user_text}"
    # bot.send_message(
    #     chat_id=chat_id,
    #     text=text,
    # )

    if str.lower(update.message.text) == str.lower('–ü—Ä–∏–≤–µ—Ç'):
        bot.send_message(
            chat_id=chat_id,
            text=f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é =)\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞:',
            reply_markup=get_base_inline_keyboard_1(),
            )
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
        # bot.send_message(message.chat.id, '–û —á–µ–º –í–∞–º –Ω–∞–ø–æ–º–Ω–∏—Ç—å?')
        # bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–æ–º–Ω–∏—Ç—å')

    elif str.lower(update.message.text) == str.lower('–ö–∞–∫ –¥–µ–ª–∞?'):
        bot.send_message(
            chat_id=chat_id,
            text=f'–°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Å–ø—Ä–æ—Å–∏–ª–∏, —É –º–µ–Ω—è –í—Å–µ —Ö–æ—Ä–æ—à–æ!')

    # elif update.message.text == '/help':
    #     bot.send_message(
    #         chat_id=chat_id,
    #         text=f'–ù–∞–ø–∏—à–∏ - "–ü—Ä–∏–≤–µ—Ç!"')

    else:
        bot.send_message(
            chat_id=chat_id,
            text=f'{user_name}, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é.\n–í–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É "/help"')



def main():

    logger.info("–ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞...")

    req = Request(
        connect_timeout=0.5,
        read_timeout=1.0,
    )

    bot = Bot(
        token=TG_TOKEN,
        request=req,
        base_url=TG_API_URL,
    )
    updater = Updater(
        bot=bot,
    )

    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –±–æ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ Telegram API
    info = bot.get_me()
    logger.info(f'Bot info: {info}')


    start_handler = CommandHandler('start', do_start)
    help_handler = CommandHandler('help', do_help)
    message_handler = MessageHandler(Filters.text, do_echo)
    # reminder_handler = MessageHandler(Filters.text, do_reminder)
    buttons_handler = CallbackQueryHandler(callback=keyboard_callback_handler, pass_chat_data=True)


    updater.dispatcher.add_handler(start_handler)
    updater.dispatcher.add_handler(help_handler)
    updater.dispatcher.add_handler(message_handler)
    # updater.dispatcher.add_handler(reminder_handler)
    updater.dispatcher.add_handler(buttons_handler)

    updater.start_polling()
    updater.idle()

    logger.info("–ó–∞–∫–æ–Ω—á–∏–ª–∏...")



if __name__ == '__main__':
    main()
