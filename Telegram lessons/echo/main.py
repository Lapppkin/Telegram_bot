import datetime
from logging import getLogger
from telegram import Bot
from telegram.ext import Updater
from telegram import Update
from telegram.ext import CommandHandler
from telegram.ext import MessageHandler
from telegram.ext import Filters
# from telegram.ext import CallbackContext
from telegram.ext import ConversationHandler
from telegram.ext import CallbackQueryHandler # –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–ª–∞–≤–∏—à–∏
from telegram.utils.request import Request




from settings.production import TG_TOKEN
from settings.production import TG_API_URL
from echo.config import load_config


config = load_config()

logger = getLogger(__name__)



def do_start(bot: Bot, update: Update):
    chat_id = update.message.chat_id
    user_name = update.message.from_user.first_name
    bot.send_message(
        chat_id=chat_id,
        text=f'–ü—Ä–∏–≤–µ—Ç, {user_name}! üññ',
    )


def do_help(bot: Bot, update: Update):
    chat_id = update.message.chat_id
    bot.send_message(
        chat_id=chat_id,
        text=f'–ù–∞–ø–∏—à–∏ - "–ü—Ä–∏–≤–µ—Ç" üññ',
    )


def do_echo(bot: Bot, update: Update):
    chat_id = update.message.chat_id
    user_name = update.message.from_user.first_name
    user_text = update.message.text
    # text = f"–í–∞—à ID = {chat_id}\n\n{user_text}"
    # bot.send_message(
    #     chat_id=chat_id,
    #     text=text,
    # )

    if str.lower(update.message.text) == str.lower('–ü—Ä–∏–≤–µ—Ç'):
        bot.send_message(
            chat_id=chat_id,
            text=f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é =)\n\n–ù–∞–ø–∏—à–∏—Ç–µ, –æ —á–µ–º –í–∞–º –Ω–∞–ø–æ–º–Ω–∏—Ç—å?',
            )
    else:
        bot.send_message(
            chat_id=chat_id,
            text=f'{user_name}, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é.\n–í–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É "/help"')
    return 'reminder'


# def do_reminder(bot: Bot, update: Update):
#     chat_id = update.message.chat_id
#     text = update.message.text
#     # –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
#
#     if user_data:
#         bot.send_message(
#             chat_id=chat_id,
#             text=f'–í–∞—à —Ç–µ–∫—Å—Ç - {user_data}! üññ',
#         )




def main():

    logger.info("–ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞...")

    req = Request(
        connect_timeout=0.5,
        read_timeout=1.0,
    )

    bot = Bot(
        token=TG_TOKEN,
        request=req,
        base_url=TG_API_URL,
    )
    updater = Updater(
        bot=bot,
        # request_kwargs={
        #     'proxy_url': 'socks5://213.32.84.49:13541/'
        # },
        # use_context=True,

    )

    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –±–æ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ Telegram API
    info = bot.get_me()
    logger.info(f'Bot info: {info}')


    start_handler = CommandHandler('start', do_start)
    help_handler = CommandHandler('help', do_help)
    message_handler = MessageHandler(Filters.text, do_echo)
    # reminder_handler = MessageHandler(Filters.text, do_reminder)
    # buttons_handler = CallbackQueryHandler(callback=keyboard_callback_handler, pass_chat_data=True)


    updater.dispatcher.add_handler(start_handler)
    updater.dispatcher.add_handler(help_handler)
    updater.dispatcher.add_handler(message_handler)
    # updater.dispatcher.add_handler(reminder_handler)
    # updater.dispatcher.add_handler(buttons_handler)

    updater.start_polling()
    updater.idle()

    logger.info("–ó–∞–∫–æ–Ω—á–∏–ª–∏...")



if __name__ == '__main__':
    main()
